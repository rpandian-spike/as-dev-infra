#
# Aerospike Client Dockerfile
#
#

FROM centos:8

RUN \
  dnf -y group install "Development Tools" \
  && dnf -y install openssl openssl-devel \
  && dnf -y install libarchive cmake rsync libcurl-devel zip \
  && dnf -y install python38 python38-devel \
  && dnf -y install initscripts net-tools psmisc passwd \
  && dnf -y install wget openldap-devel \
  && dnf -y --enablerepo=powertools install lua-devel \
  && dnf -y install tcl tk tcl-devel tk-devel \
  && dnf -y install libffi libffi-devel gdbm-devel tk-devel \
  && dnf -y install xz-devel sqlite-devel readline-devel bzip2-devel ncurses-devel zlib-devel
  
COPY ./requirements.txt /requirements.txt
RUN python3.8 -m pip install -r /requirements.txt

#RUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64
#RUN chmod +x /usr/local/bin/dumb-init

RUN echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && \
    echo 'PermitEmptyPasswords yes' >> /etc/ssh/sshd_config && \
    echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && \
    ssh-keygen -A

EXPOSE 22 

# VOLUME [/Users/ramarajpandian/code/src/:/code/src]

COPY ./as-client_entrypoint.sh /entrypoint.sh

# VOLUME [/Users/ramarajpandian/code/src/:/code/src]

#ENTRYPOINT ["/usr/local/bin/dumb-init", "--", "/entrypoint.sh"]
# Execute the run script in foreground mode
CMD ["/entrypoint.sh"]

#How to
#docker container rm as-client1
#docker build . -t as-client-centos8-dev:v1
#docker run -it --network=as-bridge -v /Users/ramarajpandian/code/src:/code/src as-client-centos8-dev:v1 /bin/bash