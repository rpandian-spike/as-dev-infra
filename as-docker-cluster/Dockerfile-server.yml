#
# Aerospike Server Enterprise Edition Dockerfile
#
# http://github.com/aerospike/aerospike-server-enterprise.docker
#

FROM centos:8

RUN \
  dnf -y group install "Development Tools" \
  && dnf -y install openssl openssh-server openssl-devel \
  && dnf -y install libarchive cmake rsync libcurl-devel zip \
  && dnf -y install python38 python38-devel \
  && dnf -y install initscripts net-tools psmisc passwd \
  && dnf -y install wget openldap-devel \
  && dnf -y --enablerepo=powertools install lua-devel

COPY ./requirements.txt /requirements.txt
RUN python3 -m pip install -r /requirements.txt

#ADD ./dumb-init-1.2.2-6.el8.x86_64.rpm /dumb-init-1.2.2-6.el8.x86_64.rpm
#RUN rpm -i dumb-init-1.2.2-6.el8.x86_64.rpm
RUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64
RUN chmod +x /usr/local/bin/dumb-init

RUN echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && \
    echo 'PermitEmptyPasswords yes' >> /etc/ssh/sshd_config && \
    echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && \
    ssh-keygen -A
#RUN passwd -d root
#COPY yourPublicKey /root/.ssh/authorized_keys/

EXPOSE 22 

# VOLUME [/Users/ramarajpandian/code/src/:/code/src]

COPY ./as-server_entrypoint.sh /as-server_entrypoint.sh
RUN ["chmod", "+x", "/as-server_entrypoint.sh"]
COPY ./aerospike.template.conf /aerospike.template.conf

RUN mkdir /etc/aerospike

ENV EEREPO /code/src/aerospike/enterprise/aerospike-server-enterprise/
ENV USE_EE 1

ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc
RUN gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \
 && gpg --batch --verify /tini.asc /tini
RUN chmod +x /tini

#ENTRYPOINT ["/usr/local/bin/dumb-init", "--", "passwd -d root && /usr/sbin/sshd -D && /entrypoint.sh"]
ENTRYPOINT ["/tini", "--", "/as-server_entrypoint.sh"]
# Execute the run script in foreground mode
CMD ["/code/src/aerospike/enterprise/aerospike-server/target/Linux-x86_64/bin/asd"]

#How to
#docker container rm as-server1
#docker build . -t as-server-centos8-dev:v1
#docker run -it -v /Users/ramarajpandian/code/src/:/code/src -p 127.0.0.1:3000:3000 --name as-server1 as-server-centos8-dev:v1
